Задания по sql

/*ЗАДАНИЕ 1: Найдите номер модели, скорость и размер жёсткого диска для всех ПК стоимостью менее 500 дол. Вывести model, speed и hd*/

SELECT model, speed, hd
FROM PC
WHERE price < 500


/*ЗАДАНИЕ 2: Найдите производителей принтеров. Вывести: maker*/

SELECT DISTINCT maker
FROM Product
WHERE type=’Printer’


/*ЗАДАНИЕ 3: Найдите номер модели, объём памяти и размеры экранов ПК-блокнотов, цена которых превышает 1000 дол.*/

SELECT DISTINCT model, ram, screen
FROM Laptop
WHERE price > 1000


/*ЗАДАНИЕ 4: Найдите все записи таблицы Printer для цветных принтеров.*/

SELECT *
FROM Printer
WHERE color=’y’


/*ЗАДАНИЕ 5: Найдите номер модели, скорость и размер жёсткого диска ПК, имеющих 12х или 24х CD и цену менее 600 дол.*/

SELECT model, speed, hd
FROM PC
WHERE price < 600 AND (cd=’12x’ OR cd=’24x’)


/*ЗАДАНИЕ 6: Для каждого производителя, выпускающего ПК-блокноты с объёмом жёсткого диска не менее 10 Гбайт, найти скорости таких ПК-блокнотов. Вывод: производитель, скорость.*/

SELECT DISTINCT Product.maker, Laptop.speed
FROM Product
JOIN Laptop
ON Product.model=Laptop.model
AND Laptop.hd>=10


/*ЗАДАНИЕ 7: Найдите номера моделей и цены всех имеющихся в продаже продуктов (любого типа) производителя B (латинская буква).*/

SELECT pc.model, pc.price FROM PC  JOIN Product ON pc.model=product.model WHERE maker=’B’
UNION
SELECT printer.model, printer.price FROM Printer JOIN Product ON printer.model=product.model WHERE maker=’B’
UNION
SELECT laptop.model, laptop.price FROM Laptop JOIN Product ON  laptop.model=product.model WHERE maker=’B’


/*ЗАДАНИЕ 8: Найдите производителя, выпускающего ПК, но не ПК-блокноты.*/

SELECT maker FROM Product 
WHERE maker IN(SELECT maker FROM Product WHERE type=’PC’)
EXCEPT
SELECT maker FROM Product WHERE type=’Laptop’


/*ЗАДАНИЕ 9: Найдите производителей ПК с процессором не менее 450 Мгц. Вывести: Maker*/

SELECT DISTINCT maker FROM Product JOIN PC ON pc.model=product.model WHERE speed >=450


/*ЗАДАНИЕ 10: Найдите модели принтеров, имеющих самую высокую цену. Вывести: model, price*/

SELECT model, price
FROM Printer
WHERE price=(SELECT DISTINCT MAX(price) FROM Printer)


/*ЗАДАНИЕ 11: Найдите среднюю скорость ПК.*/

SELECT AVG(speed) AS avg_speed FROM PC AS


/*ЗАДАНИЕ 12: Найдите среднюю скорость ПК-блокнотов, цена которых превышает 1000 дол.*/

SELECT AVG(speed) AS avg_speed
FROM Laptop 
WHERE price>1000


/*ЗАДАНИЕ 13: Найдите среднюю скорость ПК, выпущенных производителем А.*/

SELECT AVG(speed) FROM PC JOIN Product ON pc.model=product.model WHERE maker=’A’


/*ЗАДАНИЕ 14: Найдите класс, имя и страну для кораблей из таблицы Ships, имеющих не менее 10 орудий.*/

SELECT Ships.class, Ships.name, Classes.country
FROM Ships
JOIN Classes ON Ships.class=Classes.class
WHERE numguns>=10


/*ЗАДАНИЕ 15: Найдите размеры жёстких дисков, совпадающих у двух и более PC. Вывести: HD*/

SELECT hd FROM PC
GROUP BY hd
HAVING COUNT(model)>1


/*ЗАДАНИЕ 16: Найдите пары моделей PC, имеющих одинаковые скорости и RAM. Врезультате каждая пара указывается только один раз, т.е. (I,j), но не (j,i), Порядок вывода: модель с большим номером, модель с меньшим номером, скорость и RAM.*/

SELECT DISTINCT N.model, M.model, N.speed, N.ram
FROM PC AS N, PC AS M
WHERE N.speed=M.speed AND N.ram=M.ram AND N.model>M.model


/*ЗАДАНИЕ 17: Найдите модели ПК-блокнотов, скорость которых меньше скорости каждого из ПК. Вывести: type, model, speed*/

SELECT DISTINCT Product.type, Laptop.model, Laptop.speed
FROM Laptop, Product
WHERE Laptop.model=Product.model
AND Laptop.speed<ALL(SELECT speed FROM PC)


/*ЗАДАНИЕ 18: Найдите производителей самых дешёвых цветных принтеров. Вывести: maker, price*/

SELECT DISTINCT Product.maker, Printer.price
FROM Printer
JOIN Product ON Product.model=Printer.model
WHERE Printer.color=’y’ AND Printer.price=(SELECT MIN(price) FROM Printer WHERE Printer.color=’y’)


/*ЗАДАНИЕ 19: Для каждого производителя, имеющего модели в таблице Laptop, найдите средний размер экрана выпускаемых им ПК-блокнотов. Вывести: maker, средний размер экрана.*/

SELECT DISTINCT Product.maker, AVG(Laptop.screen) AS avg_screen
FROM Laptop
JOIN Product ON Laptop.model=Product.model
GROUP BY maker


/*ЗАДАНИЕ 20: Найдите производителей, выпускающих по меньшей мере три различных модели ПК. Вывести: Maker, число моделей ПК.*/

SELECT maker, COUNT(model) AS count_
FROM Product
WHERE type=’PC’ 
GROUP BY maker
HAVING COUNT(DISTINCT model)>2


/*ЗАДАНИЕ 21: Найдите максимальную цену ПК, выпускаемых каждым производителем, у которого есть модели в таблице PC. Вывести: maker, максимальная цена.*/

SELECT Product.maker, MAX(PC.price) AS p_price
FROM PC
JOIN Product ON Product.model=PC.model
GROUP BY maker


/*ЗАДАНИЕ 22: Для каждого значения скорости ПК, превышающего 600 МГц, определите среднюю цену ПК  с такой же скоростью. Вывести: speed, средняя цена.*/

SELECT speed, AVG(price) AS avg_price
FROM PC
WHERE speed>600
GROUP BY speed


/*ЗАДАНИЕ 23: Найдите производителей, которые производили бы как ПК со скоростью не менее 750 МГц, так и ПК-блокноты со скоростью не менее 750 МГц. Вывести: Maker*/

SELECT Product.maker
FROM Product
JOIN PC ON PC.model=Product.model
WHERE  speed>=750
INTERSECT
SELECT Product.maker 
FROM Product 
JOIN Laptop ON Laptop.model=Product.model
WHERE speed>=750


/*ЗАДАНИЕ 24: Перечислите номера моделей любых типов, имеющих самую высокую цену по всей имеющейся в базе данных продукции*/

SELECT model, FROM(SELECT model, price FROM PC
UNION
SELECT model, price FROM Laptop
UNION
SELECT model,  price FROM Printer)
AS p1 
WHERE price=(SELECT MAX(price) FROM(SELECT price FROM PC
UNION
SELECT price FROM Laptop
UNION
SELECT price FROM Printer)
AS p2 )

Или

WITH max_price_for_all_types AS
(SELECT model, price FROM PC
UNION
SELECT model, price FROM Laptop
UNION
SELECT model, price FROM Printer)
SELECT model FROM max_price_for_all_types WHERE price=(SELECT MAX(price) FROM max_price_for_all_types)


/*ЗАДАНИЕ 25: Найдите производителей принтеров, которые производят ПК с наименьшим объёмом RAM и с самым быстрым процессором среди всех ПК, имеющих наименьший набор RAM. Вывести: Maker*/

SELECT maker FROM Product
WHERE model IN(SELECT model FROM PC
 WHERE speed=(SELECT MAX(speed) FROM PC WHERE ram=(SELECT MIN(ram) FROM PC))
AND ram=(SELECT MIN(ram) FROM PC))
AND maker IN(SELECT maker FROM Product WHERE type=’Printer’)
GROUP BY maker
(или DISTINCT или GROUP BY maker)


/*ЗАДАНИЕ 26: Найдите среднюю цену ПК И ПК-блокнотов, выпущенных производителем А (латинская буква). Вывести: одна общая средняя цена.*/

SELECT AVG(price) AS avg_price FROM(SELECT PC.price FROM PC
JOIN Product ON PC.model=Product.model
WHERE maker='A'
UNION ALL
SELECT Laptop.price FROM Laptop
JOIN Product ON Laptop.model=Product.model
WHERE maker='A') AS a_price


/*ЗАДАНИЕ 27: Найдите средний размер диска ПК каждого из тех производителей, которые выпускают и принтеры. Вывести: maker, средний размер HD.*/

SELECT maker as m, AVG(hd) AS avg_hd FROM Product
JOIN PC ON PC.model=Product.model
WHERE Product.maker IN(SELECT Product.maker FROM Product WHERE type='PRINTER')
GROUP BY maker

Или

SELECT maker AS maker, AVG(hd) AS a_hd FROM(SELECT Product.maker, PC.hd 
FROM Product JOIN PC ON PC.model=Product.model 
WHERE maker IN(SELECT maker FROM Product WHERE type='Printer')) AS a
GROUP BY maker


/*ЗАДАНИЕ 28: Используя таблицу Product, определить количество производителей, выпускающих по одной модели.*/

SELECT COUNT(maker) as c FROM (SELECT maker FROM Product
GROUP BY maker
HAVING COUNT(model)=1) AS mak


/*ЗАДАНИЕ 29: В предположении, что приход и расход денег на каждом пункте приёма фиксируется не чаще одного раза в день [т.е. первичный ключ (пункт, дата)], написать запрос с выходными данными (пункт, дата, приход, расход). Использовать таблицы Income_o и Outcome_o.*/


SELECT Income_o.point, Income_o.date, inc, out FROM Income_o
LEFT JOIN Outcome_o ON 
Income_o.point=Outcome_o.point AND Income_o.date=Outcome_o.date
UNION
SELECT Outcome_o.point, Outcome_o.date, inc, out FROM Outcome_o 
LEFT JOIN Income_o ON 
Outcome_o.point=Income_o.point AND Outcome_o.date=Income_o.date


/*ЗАДАНИЕ 30: В предположении, что приход и расход денег на каждом пункте приёма фиксируется произвольное число раз (первичным ключом в таблицах является столбец code), требуется получить таблицу, в которой каждому пункту за каждую дату выполнения операций будет соответствовать одна строка. Вывод: point, date, суммарный расход пункта за день (out), суммарный приход пункта за день (inc). Отсутствующие значения считать неопределёнными (NULL).*/


SELECT point, date, SUM(out) AS outcome, SUM(inc) AS income FROM
(SELECT code, point, date, NULL AS inc, out FROM Outcome
UNION
SELECT code, point, date, inc, NULL AS out  FROM Income) AS f
GROUP BY point, date


/*ЗАДАНИЕ 31: Для классов кораблей, калибр орудий которых не менее 16 дюймов, укажите класс и страну.*/

SELECT class, country
FROM Classes
WHERE bore>=16


/*ЗАДАНИЕ 32: Одной из характеристик корабля является половина куба калибра его главных орудий (mw). С точностью до 2 десятичных знаков определите среднее значение mw для кораблей каждой страны, у которой есть корабли в базе данных.*/

SELECT country, CAST(AVG(POWER(bore,3)/2)AS decimal(6,2)) AS mv 
FROM (SELECT country, bore, name 
FROM Classes JOIN Ships ON Classes.class=Ships.class
UNION
SELECT country, bore, ship 
FROM Classes 
JOIN Outcomes ON Classes.class=Outcomes.ship) AS mv_table
GROUP BY country

Или

SELECT DISTINCT country, CAST(AVG(bore*bore*bore/2)AS numeric(38,2)) 
FROM(SELECT country, name, bore FROM Ships JOIN Classes ON Classes.class=Ships.class
UNION
SELECT country, ship, bore FROM Outcomes JOIN Classes ON Classes.class=Outcomes.ship) AS avg_mv
GROUP BY country


/*ЗАДАНИЕ 33: Укажите корабли, потопленные в сражениях в Северной Атлантике (North Atlantic). Вывод: ship.*/

SELECT ship
FROM Outcomes
WHERE battle=’North Atlantic’ AND result=’sunk’


/*ЗАДАНИЕ 34: По Вашингтонскому международному договору от начала 1922 г. запрещалось строить линейные корабли водоизмещением более 35 тыс. тонн. Укажите корабли, нарушившие этот договор (учитывать только корабли с известным годом спуска на воду). Вывести названия кораблей.*/

SELECT DISTINCT name 
FROM Ships,Classes
WHERE Ships.class=Classes.class AND Classes.displacement>35000 
AND Ships.launched>=1922 AND Classes.type='bb'


/*ЗАДАНИЕ 35: В таблице Product найти модели, которые состоят только из цифр или только из латинских букв (A-Z, без учета регистра). Вывод: номер модели, тип модели.*/

SELECT model, type FROM Product
WHERE model NOT LIKE ‘%[^0-9]%’ OR model NOT LIKE ‘%[^a-zA-Z]%’


/*ЗАДАНИЕ 36: Перечислите названия головных кораблей, имеющихся в базе данных (учесть корабли в Outcomes).*/

SELECT name FROM Ships where class=name
UNION
SELECT ship FROM Outcomes
JOIN Classes ON Classes.class=Outcomes.ship


/*ЗАДАНИЕ 37: Найдите классы, в которые входит только один корабль из базы данных (учесть также корабли в Outcomes).*/

SELECT class 
FROM (SELECT name, class FROM Ships
UNION
SELECT ship, class FROM Classes, Outcomes
WHERE Classes.class=Outcomes.ship)As Important
GROUP BY class
HAVING COUNT(Important.name)=1


/*ЗАДАНИЕ 38: Найдите страны, имевшие когда-либо классы обычных боевых кораблей (‘bb’) и имевшие когда-либо классы крейсеров (‘bc’).*/

SELECT country
FROM Classes
WHERE type=’bb’
INTERSECT
SELECT country
FROM Classes
WHERE type=’bc’


/*ЗАДАНИЕ 39: Найдите корабли, ‘сохранившиеся для будущих сражений’; т.е. выведенные из строя в одной битве (damaged), они участвовали в другой, произошедшей позже.*/

SELECT DISTINCT ship FROM(SELECT ship, date, result FROM Outcomes 
JOIN Battles dam_bat ON  battle=name
WHERE result='damaged'
AND ship IN(SELECT ship FROM Outcomes JOIN Battles ON battle=name 
WHERE dam_bat.date<battles.date)) ship_table

Или

SELECT DISTINCT ship FROM Outcomes JOIN Battles dam_bat ON battle=name 
WHERE result='damaged' 
AND ship IN (SELECT ship FROM Outcomes JOIN Battles ON Outcomes.battle=Battles.name 
WHERE dam_bat.date<Battles.date)

Или

SELECT DISTINCT ship
FROM (SELECT ship, date
 FROM Outcomes JOIN Battles 
 ON name = battle
 WHERE result = 'damaged') AS dam
WHERE EXISTS(
 SELECT ship
 FROM Outcomes JOIN Battles 
 ON name = battle
 WHERE date > dam.date AND dam.ship = ship
 )

Или

SELECT DISTINCT ship
FROM(SELECT ship, date FROM Outcomes, Battles WHERE battle=name
AND result='damaged') AS dam
WHERE EXISTS(SELECT ship FROM Outcomes, Battles WHERE battle=name
AND date>dam.date AND ship=dam.ship)


/*ЗАДАНИЕ 40: Найти производителей, которые выпускают более одной модели, при этом все выпускаемые производителем модели являются продуктами одного типа. Вывести:  maker, type*/

SELECT DISTINCT maker, type
FROM Product
WHERE maker IN(SELECT maker FROM Product
GROUP BY maker
HAVING COUNT(model)>1 AND COUNT(DISTINCT type)=1)


/*ЗАДАНИЕ 41: Для каждого производителя у которого присутствуют модели хотя бы в одной из таблиц PC, Laptop или Printer, определить максимальную цену на его продукцию. Вывод: имя производителя, если среди цен на продукцию данного производителя присутствует NULL, то выводить для этого производителя NULL, иначе максимальную цену.*/

SELECT maker, CASE WHEN MAX(CASE WHEN price IS NULL THEN 1 ELSE 0 END) = 0 
THEN MAX(price) END price FROM 
(SELECT maker, price FROM PC
JOIN Product ON Product.model=PC.model
UNION
SELECT maker, price FROM Laptop
JOIN Product ON Product.model=Laptop.model
UNION
SELECT maker, price FROM Printer
JOIN Product ON Product.model=Printer.model
)AS  price_table
GROUP BY maker


/*ЗАДАНИЕ 42: Найдите названия кораблей, потопленных в сражениях, и название сражения, в котором они были потоплены.*/

SELECT ship, battle
FROM Outcomes
WHERE result=’sunk’


/*ЗАДАНИЕ 43: Укажите сражения, которые произошли в годы, не совпадающие ни с одним из годов спуска кораблей на воду.*/

SELECT name FROM Battles
WHERE DATEPART(yy, date) NOT IN
(SELECT launched FROM Ships WHERE launched IS NOT NULL)


/*ЗАДАНИЕ 44: Найдите названия всех кораблей в базе данных, начинающихся с буквы R.*/

SELECT name FROM Ships WHERE name LIKE ‘R%’
UNION
SELECT ship FROM Outcomes WHERE ship LIKE ‘R%’


/*ЗАДАНИЕ 45: Найдите названия всех кораблей в базе данных, состоящие из трех и более слов (например, King George V). Считать, что слова в названиях разделяются единичными пробелами, и нет концевых пробелов.*/

SELECT name FROM Ships WHERE name LIKE ‘% % %’
UNION
SELECT ship FROM Outcomes WHERE ship LIKE ‘% % %’


/*ЗАДАНИЕ 46: Для каждого корабля, участвовавшего в сражении при Гвадалканале (Guadalcanal), вывести название, водоизмещение и число орудий.*/

SELECT ship, displacement, numGuns FROM (
SELECT name, displacement, numGuns FROM Ships 
JOIN Classes ON Ships.class=Classes.class
UNION
SELECT class AS name, displacement, numGuns FROM Classes) AS my_table
RIGHT JOIN Outcomes ON my_table.name=Outcomes.ship
WHERE Outcomes.battle = 'Guadalcanal'


/*ЗАДАНИЕ 47: Определить страны, которые потеряли в сражениях все свои корабли.*/

WITH all_ships AS(SELECT Classes.country, Ships.name FROM Ships
JOIN Classes ON Classes.class=Ships.class
UNION
SELECT Classes.country, Outcomes.ship FROM Outcomes 
JOIN Classes ON Classes.class=Outcomes.ship)
SELECT DISTINCT country FROM all_ships
WHERE country NOT IN(SELECT country FROM all_ships
WHERE all_ships.name NOT IN(SELECT ship FROM Outcomes 
WHERE result = 'sunk'))

Или

SELECT country FROM(
SELECT this_table_2.country, this_table_2.cnt FROM(
SELECT country, COUNT(name) cnt FROM (
SELECT country, name FROM Classes
JOIN Ships ON Classes.class=Ships.class
UNION
SELECT country, ship FROM Classes
JOIN Outcomes ON Classes.class=Outcomes.ship
)this_table
GROUP BY country)this_table_2 JOIN (
SELECT country, cnt FROM(
SELECT country, COUNT(name) cnt FROM(
SELECT country, name FROM Classes JOIN Ships ON Ships.class=Classes.class
WHERE name IN(SELECT ship FROM Outcomes WHERE result = 'sunk')
UNION
SELECT country, ship FROM Classes
JOIN Outcomes ON Classes.class=Outcomes.ship
WHERE Outcomes.result = 'sunk')this_table_3 GROUP BY country
)this_table_4
)this_table_5 ON this_table_2.country=this_table_5.country
AND this_table_2.cnt = this_table_5.cnt
)this_table_6


/*ЗАДАНИЕ 48: Найдите классы кораблей, в которых хотя бы один корабль был потоплен в сражении.*/

SELECT Classes.class FROM Classes 
JOIN Outcomes ON Outcomes.ship=Classes.class
WHERE Outcomes.result = 'sunk'
UNION
SELECT Classes.class FROM Classes 
JOIN Ships ON Ships.class=Classes.class
JOIN Outcomes ON Ships.name=Outcomes.ship
WHERE Outcomes.result = 'sunk'


/*ЗАДАНИЕ 49: Найдите названия кораблей с орудиями калибра 16 дюймов (учесть корабли из таблицы Outcomes).*/

SELECT DISTINCT ship FROM Outcomes
JOIN Battles ON battle=name
WHERE result='damaged' AND
EXISTS(SELECT ship FROM Outcomes
JOIN Battles ON battle=name
WHERE Battles.name=Outcomes.battle AND result='OK')
SELECT ship FROM Outcomes
JOIN Classes ON Classes.class=Outcomes.ship
WHERE bore=16
UNION
SELECT name FROM Ships
JOIN Classes ON Classes.class=Ships.class
WHERE bore=16


/*ЗАДАНИЕ 50: Найдите сражения, в которых участвовали корабли класса Kongo из таблицы Ships.*/

SELECT DISITINCT battle FROM Outcomes
JOIN Ships ON Ships.name=Outcomes.ship
JOIN Classes ON Classes.class=Ships.class
WHERE Classes.class=’Kongo’

Или

SELECT DISTINCT battle FROM Outcomes
WHERE ship IN (SELECT name FROM Ships WHERE class=’Kongo’)


